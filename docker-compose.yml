version: "3.7"

services: 
    redis:
        container_name: redis
        image: redis:latest
        ports: 
            - "6379:6379"
        restart: unless-stopped
        volumes: 
            - ~/DockerData/Redis:/data
        networks: 
            - dev-network

    redis-commander:
        container_name: redis-commander
        image: rediscommander/redis-commander
        restart: unless-stopped
        depends_on:
            - redis
        ports: 
            - "8081:8081"
        environment: 
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        networks: 
            - dev-network
    
    mongo:
        container_name: mongo
        image: mongo:4.4
        ports:
            - "27017:27017"
        restart: unless-stopped
        volumes: 
            - ~/DockerData/Mongo/db:/data/db
        networks: 
            - dev-network

    rabbitmq:
        container_name: rabbitmq
        hostname: local-docker
        image: rabbitmq:3-management
        restart: unless-stopped
        ports: 
            - "5672:5672"
            - "15672:15672"
            - "15692:15692"
            - "25672:25672"
        volumes:
            - ~/DockerData/rabbitmq:/var/lib/rabbitmq
            - ~/DockerData/rabbitmq:/var/log/rabbitmq
        networks: 
            - dev-network

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        restart: unless-stopped
        ulimits:
          memlock:
            soft: -1
            hard: -1
        volumes:
            - ~/DockerData/ElasticSearch/data:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
        networks: 
            - dev-network

    kibana:
        image: docker.elastic.co/kibana/kibana:7.13.4
        container_name: kibana
        restart: unless-stopped
        depends_on:
            - elasticsearch
        ports:
            - 5601:5601
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
        networks: 
            - dev-network

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        restart: unless-stopped
        ports:
            - '9090:9090'
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - ./targets.json:/etc/prometheus/targets.json
            - ~/DockerData/prometheus:/prometheus
        networks: 
            - dev-network
        extra_hosts:
            - host.docker.internal:host-gateway

    grafana:
        image: grafana/grafana
        container_name: grafana
        restart: unless-stopped
        depends_on:
            - prometheus
        ports:
            - '3001:3000'
        volumes: 
            - ~/DockerData/grafana:/var/lib/grafana
        networks: 
            - dev-network

networks:
  dev-network:
    driver: bridge